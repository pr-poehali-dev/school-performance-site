import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import Icon from '@/components/ui/icon';

interface Student {
  id: number;
  name: string;
  score: number;
  rank: number;
  avatar: string;
  achievements: string[];
  subjects: { name: string; score: number }[];
}

const mockStudents: Student[] = [
  {
    id: 1,
    name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    score: 3850,
    rank: 1,
    avatar: 'üë©‚Äçüéì',
    achievements: ['–û—Ç–ª–∏—á–Ω–∏—Ü–∞', '–õ–∏–¥–µ—Ä –≥–æ–¥–∞', '–ó–æ–ª–æ—Ç–∞—è –º–µ–¥–∞–ª—å'],
    subjects: [
      { name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', score: 98 },
      { name: '–§–∏–∑–∏–∫–∞', score: 95 },
      { name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', score: 100 }
    ]
  },
  {
    id: 2,
    name: '–î–º–∏—Ç—Ä–∏–π –ü–µ—Ç—Ä–æ–≤',
    score: 3720,
    rank: 2,
    avatar: 'üë®‚Äçüéì',
    achievements: ['–ü—Ä–∏–∑—ë—Ä –æ–ª–∏–º–ø–∏–∞–¥—ã', '–°–ø–æ—Ä—Ç—Å–º–µ–Ω'],
    subjects: [
      { name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', score: 92 },
      { name: '–§–∏–∑–∏–∫–∞', score: 96 },
      { name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', score: 94 }
    ]
  },
  {
    id: 3,
    name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
    score: 3680,
    rank: 3,
    avatar: 'üëß',
    achievements: ['–ê–∫—Ç–∏–≤–∏—Å—Ç', '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ª–∏—á–Ω–æ—Å—Ç—å'],
    subjects: [
      { name: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', score: 99 },
      { name: '–ò—Å—Ç–æ—Ä–∏—è', score: 95 },
      { name: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', score: 97 }
    ]
  },
  {
    id: 4,
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–æ–∑–ª–æ–≤',
    score: 3550,
    rank: 4,
    avatar: 'üë¶',
    achievements: ['–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å'],
    subjects: [
      { name: '–•–∏–º–∏—è', score: 91 },
      { name: '–ë–∏–æ–ª–æ–≥–∏—è', score: 93 },
      { name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', score: 88 }
    ]
  },
  {
    id: 5,
    name: '–°–æ—Ñ–∏—è –ù–æ–≤–∏–∫–æ–≤–∞',
    score: 3490,
    rank: 5,
    avatar: 'üë©',
    achievements: ['–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π'],
    subjects: [
      { name: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', score: 90 },
      { name: '–ò—Å—Ç–æ—Ä–∏—è', score: 92 },
      { name: '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', score: 89 }
    ]
  }
];

const Index = () => {
  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null);
  const [activeTab, setActiveTab] = useState('rankings');

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      <div className="container mx-auto px-4 py-8">
        <header className="mb-8 animate-fade-in">
          <h1 className="text-5xl font-bold text-foreground mb-2">
            –†–µ–π—Ç–∏–Ω–≥ –®–∫–æ–ª—å–Ω–∏–∫–æ–≤
          </h1>
          <p className="text-muted-foreground text-lg">
            –¢–æ–ø —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º
          </p>
        </header>

        <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-6">
          <TabsList className="grid w-full max-w-md grid-cols-3 bg-white shadow-sm">
            <TabsTrigger value="rankings" className="gap-2">
              <Icon name="TrendingUp" size={18} />
              –†–µ–π—Ç–∏–Ω–≥
            </TabsTrigger>
            <TabsTrigger value="profiles" className="gap-2">
              <Icon name="Users" size={18} />
              –ü—Ä–æ—Ñ–∏–ª–∏
            </TabsTrigger>
            <TabsTrigger value="achievements" className="gap-2">
              <Icon name="Award" size={18} />
              –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            </TabsTrigger>
          </TabsList>

          <TabsContent value="rankings" className="space-y-4 animate-fade-in">
            <div className="grid gap-4">
              {mockStudents.map((student, index) => (
                <Card
                  key={student.id}
                  className="hover:shadow-lg transition-all duration-300 animate-scale-in cursor-pointer border-2 hover:border-primary"
                  style={{ animationDelay: `${index * 0.1}s` }}
                  onClick={() => setSelectedStudent(student)}
                >
                  <CardContent className="p-6">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-4">
                        <div className="relative">
                          <div className="text-5xl">{student.avatar}</div>
                          {student.rank <= 3 && (
                            <div className="absolute -top-2 -right-2">
                              <Icon
                                name={student.rank === 1 ? 'Trophy' : 'Medal'}
                                size={24}
                                className={
                                  student.rank === 1
                                    ? 'text-gold'
                                    : student.rank === 2
                                    ? 'text-slate-400'
                                    : 'text-amber-700'
                                }
                              />
                            </div>
                          )}
                        </div>
                        <div>
                          <h3 className="text-xl font-bold">{student.name}</h3>
                          <div className="flex gap-2 mt-1">
                            <Badge variant="outline" className="text-sm">
                              –†–µ–π—Ç–∏–Ω–≥: #{student.rank}
                            </Badge>
                            <Badge className="bg-primary text-primary-foreground">
                              {student.score} –±–∞–ª–ª–æ–≤
                            </Badge>
                          </div>
                        </div>
                      </div>
                      <Button variant="outline" className="gap-2">
                        <Icon name="Eye" size={18} />
                        –ü—Ä–æ—Ñ–∏–ª—å
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="profiles" className="animate-fade-in">
            {selectedStudent ? (
              <Card className="animate-scale-in">
                <CardHeader>
                  <div className="flex items-center gap-4">
                    <div className="text-6xl">{selectedStudent.avatar}</div>
                    <div>
                      <CardTitle className="text-3xl">{selectedStudent.name}</CardTitle>
                      <div className="flex gap-2 mt-2">
                        <Badge className="bg-primary">#{selectedStudent.rank}</Badge>
                        <Badge variant="outline">{selectedStudent.score} –±–∞–ª–ª–æ–≤</Badge>
                      </div>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="space-y-6">
                  <div>
                    <h4 className="font-semibold mb-3 text-lg flex items-center gap-2">
                      <Icon name="Award" size={20} />
                      –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                    </h4>
                    <div className="flex flex-wrap gap-2">
                      {selectedStudent.achievements.map((achievement, idx) => (
                        <Badge key={idx} className="bg-success text-white">
                          {achievement}
                        </Badge>
                      ))}
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3 text-lg flex items-center gap-2">
                      <Icon name="BookOpen" size={20} />
                      –£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º
                    </h4>
                    <div className="space-y-3">
                      {selectedStudent.subjects.map((subject, idx) => (
                        <div key={idx} className="space-y-1">
                          <div className="flex justify-between text-sm">
                            <span className="font-medium">{subject.name}</span>
                            <span className="text-muted-foreground">{subject.score}%</span>
                          </div>
                          <Progress value={subject.score} className="h-2" />
                        </div>
                      ))}
                    </div>
                  </div>
                </CardContent>
              </Card>
            ) : (
              <Card className="p-12 text-center">
                <Icon name="UserCircle" size={64} className="mx-auto mb-4 text-muted-foreground" />
                <p className="text-muted-foreground text-lg">
                  –í—ã–±–µ—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –∏–∑ —Ä–µ–π—Ç–∏–Ω–≥–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
                </p>
              </Card>
            )}
          </TabsContent>

          <TabsContent value="achievements" className="animate-fade-in">
            <div className="grid md:grid-cols-2 gap-6">
              <Card className="animate-scale-in">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="Trophy" size={24} className="text-gold" />
                    –õ—É—á—à–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {mockStudents.slice(0, 3).map((student, idx) => (
                    <div key={student.id} className="flex items-center justify-between p-3 bg-muted rounded-lg">
                      <div className="flex items-center gap-3">
                        <div className="text-3xl">{student.avatar}</div>
                        <div>
                          <p className="font-semibold">{student.name}</p>
                          <p className="text-sm text-muted-foreground">
                            {student.achievements[0]}
                          </p>
                        </div>
                      </div>
                      <Icon
                        name="Star"
                        size={24}
                        className={
                          idx === 0 ? 'text-gold' : idx === 1 ? 'text-slate-400' : 'text-amber-700'
                        }
                      />
                    </div>
                  ))}
                </CardContent>
              </Card>

              <Card className="animate-scale-in" style={{ animationDelay: '0.1s' }}>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Icon name="BarChart3" size={24} className="text-primary" />
                    –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="font-medium">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª</span>
                      <span className="text-muted-foreground">3658</span>
                    </div>
                    <Progress value={92} className="h-2" />
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="font-medium">–í—Å–µ–≥–æ —É—á–µ–Ω–∏–∫–æ–≤</span>
                      <span className="text-muted-foreground">5</span>
                    </div>
                    <Progress value={100} className="h-2" />
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="font-medium">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
                      <span className="text-muted-foreground">85%</span>
                    </div>
                    <Progress value={85} className="h-2" />
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Index;
